<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>Socket.IO 예제</title>
</head>
<style type="text/css">
#msgform {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
  padding: 15px 0 15px 15px;
}
</style>
    <select id="roomoptions" onchange="joinRoom()">
        <option value="채팅방 1" selected>채팅방 1</option>
        <option value="채팅방 2">채팅방 2</option>
    </select>
    <hr>
    <ul id="messages" type="none">
        <li id="usercount"></li><br/>
    </ul>

    <form id="msgform">
        <hr>
        <input type="text" name="nick" id="nick">
        <input id="msginput" autocomplete="off" type="text" style='width:500px'>
        <button type="submit">전송</button>
    </form>

    <button onclick="getRooms()">방 목록 가져오기</button>

    

    <p id="rooms"></p>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        var roomname = "채팅방 1"
        var socket = io();
        var msgform = document.getElementById('msgform');
        var roomsText = document.getElementById('rooms');
        // socket.on 함수로 서버에서 전달하는 신호를 수신
        socket.on('usercount', (count) => {
            var userCounter = document.getElementById('usercount');
            userCounter.innerText = "현재 서버에 " + count + "명이 접속해있습니다.";
        });

        // 메시지 수신시 HTML에 메시지 내용 작성
        socket.on('message', (data) => {  // message + nick
            var messageList = document.getElementById('messages');
            var messageTag = document.createElement("li");
            console.log(data);
            messageTag.innerText = data;
            messageList.appendChild(messageTag);
        });

        // 접속한 룸이 바뀌었을 때
        socket.on('roomChanged', (joinedRoom) => { 
            roomname = joinedRoom;
            var messageList = document.getElementById('messages');
            var messageTag = document.createElement("li");
            messageTag.innerText = "===============" + joinedRoom + "에 접속했습니다. ===============";
            messageList.appendChild(messageTag);
        });

        msgform.onsubmit = (e) => {
            e.preventDefault();
            var msginput = document.getElementById('msginput');
            var nickinput = document.getElementById('nick');

            var data = {
                msg: msginput.value,
                roomname,
                nick: nickinput.value
            }

            // socket.emit으로 서버에 신호를 전달
            socket.emit('message', data);
            console.log(roomname);
            msginput.value = "";
        };

        function getRooms() { // 방 목록 가져오기 버튼 클릭시
           // url을 지정해서 특정 네임스페이스를 들어갈 수 있다.
           var debug = io.connect('http://localhost:3000/debug');

           debug.emit('getRooms');  // getRooms 이벤트 호출
           
           debug.on('rooms', (rooms) => { // rooms 이벤트 발생
               // 룸 목록 업데이트
               roomsText.textContent = "";
               console.log(rooms);
               for (var room in rooms) {
                   roomsText.innerHTML += room + "<br>";
               }
           });
        }
        function joinRoom() { // 방 접속 버튼 클릭시
            var roomOptions = document.getElementById("roomoptions");
            var roomToJoin = roomOptions.options[roomOptions.selectedIndex].value;
            console.log(roomToJoin); // 채팅방 이름
            // 서버에 룸 전환 신호를 발신
            socket.emit('joinRoom', roomname, roomToJoin);
        }
    </script>
</body>
</html>